<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jhbim.bimvr.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.jhbim.bimvr.dao.entity.pojo.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updata_time" jdbcType="TIMESTAMP" property="updataTime" />
    <result column="login_flag" jdbcType="INTEGER" property="loginFlag" />
    <result column="pricture" jdbcType="VARCHAR" property="pricture" />
    <result column="posotion" jdbcType="VARCHAR" property="posotion" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="companyname" jdbcType="VARCHAR" property="companyname" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="account" jdbcType="INTEGER" property="account" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, role_id, user_name, password, phone, create_time, updata_time, login_flag, 
    pricture, posotion, remarks, companyname, state, account
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where phone =#{phone,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where phone =#{phone,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    insert into user (user_id, role_id, user_name, 
      password, phone, create_time, 
      updata_time, login_flag, pricture, 
      posotion, remarks, companyname, 
      state, account)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updataTime,jdbcType=TIMESTAMP}, #{loginFlag,jdbcType=INTEGER}, #{pricture,jdbcType=VARCHAR}, 
      #{posotion,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{companyname,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{account,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updataTime != null">
        updata_time,
      </if>
      <if test="loginFlag != null">
        login_flag,
      </if>
      <if test="pricture != null">
        pricture,
      </if>
      <if test="posotion != null">
        posotion,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="companyname != null">
        companyname,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="account != null">
        account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updataTime != null">
        #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFlag != null">
        #{loginFlag,jdbcType=INTEGER},
      </if>
      <if test="pricture != null">
        #{pricture,jdbcType=VARCHAR},
      </if>
      <if test="posotion != null">
        #{posotion,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="companyname != null">
        #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    update user
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updataTime != null">
        updata_time = #{updataTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFlag != null">
        login_flag = #{loginFlag,jdbcType=INTEGER},
      </if>
      <if test="pricture != null">
        pricture = #{pricture,jdbcType=VARCHAR},
      </if>
      <if test="posotion != null">
        posotion = #{posotion,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="companyname != null">
        companyname = #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    update user
    set role_id = #{roleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updata_time = #{updataTime,jdbcType=TIMESTAMP},
      login_flag = #{loginFlag,jdbcType=INTEGER},
      pricture = #{pricture,jdbcType=VARCHAR},
      posotion = #{posotion,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      companyname = #{companyname,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      account = #{account,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="ResultList" type="com.jhbim.bimvr.dao.entity.vo.UserMessageVo">
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_flag" jdbcType="INTEGER" property="loginFlag" />
    <result column="pricture" jdbcType="VARCHAR" property="pricture" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap id="ResultRank" type="com.jhbim.bimvr.dao.entity.vo.UserRankVo">
    <result column="sequence" jdbcType="INTEGER" property="sequence" />
    <result column="pricture" jdbcType="VARCHAR" property="pricture" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="posotion" jdbcType="VARCHAR" property="posotion" />
    <result column="account" jdbcType="INTEGER" property="account" />
    <result column="modelNum" jdbcType="INTEGER" property="modelNum" />
  </resultMap>

  <!--修改登录状态-->
  <update id="updatestate" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    update user set state = #{state,jdbcType=INTEGER} where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <update id="updateAccount" >
    update user set account = #{account,jdbcType=INTEGER} where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改密码-->
  <update id="updatePwd" parameterType="com.jhbim.bimvr.dao.entity.pojo.User">
    update user
    set password = #{password,jdbcType=VARCHAR}
    where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改用户昵称-->
  <update id="updatausername" parameterType="java.lang.String">
    update user
      set  user_name = #{userName,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改所属公司-->
  <update id="updatacompanyname" parameterType="java.lang.String">
    update user
      set  companyname =  #{companyname,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改职位-->
  <update id="updataposition" parameterType="java.lang.String">
    update user
      set   posotion = #{posotion,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改备注-->
  <update id="updataremarks" parameterType="java.lang.String">
    update user
      set   remarks =  #{remarks,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
  <!--修改头像-->
  <update id="updatepicture" parameterType="java.lang.String">
    update user
      set   pricture =  #{pricture,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
<!--修改密码-->
  <update id="updatepwd" parameterType="java.lang.String">
    update user
      set  password = #{password,jdbcType=VARCHAR}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>
<!--修改会员等级-->
  <update id="updaterole">
    update user
      set  role_id = #{roleId,jdbcType=INTEGER}
      where phone = #{phone,jdbcType=VARCHAR}
  </update>

  <!--根据用户手机号或昵称查询-->
  <select id="findByuserphoneorusername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="phone!=null and phone!=''">
        phone like concat("%",#{phone,jdbcType=VARCHAR},"%")
        <!--phone =#{phone,jdbcType=VARCHAR}-->
      </if>
      <if test="userName!=null and userName!=''">
        or user_name like concat("%",#{userName,jdbcType=VARCHAR},"%")
        <!--or user_name = #{userName,jdbcType=VARCHAR}-->
</if>
</where>
</select>

<select id="userList" resultMap="BaseResultMap">
select * from user where phone in
<foreach close=")" collection="list" index="index" item="phone" open="(" separator=",">
#{phone,jdbcType=VARCHAR}
</foreach>
</select>
<!--随机查询在线人员-->
  <select id="randomgetAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user  where state = 1 ORDER BY RAND()
  </select>
  <!--排除共同好友在随机展示-->
  <select id="randomgetAllisnotself" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where phone not in(SELECT phone FROM user where phone = #{phone,jdbcType=VARCHAR}) and state = 1 ORDER BY RAND()
  </select>
<!--根据手机号查询-->
  <select id="getlistAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user  where  phone = #{phone,jdbcType=VARCHAR}
  </select>

  <select id="userSort" resultMap="BaseResultMap">
    select * from user where phone in
    <foreach close=")" collection="list" index="index" item="phone" open="(" separator=",">
      #{phone,jdbcType=VARCHAR}
    </foreach>
    order by convert(user_name using gbk) asc
  </select>
  <!--根据用户id查询-->
  <select id="findByuserid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <!--<select id="userListMessage" parameterType="java.lang.String" resultMap="ResultList">-->
   <!--select user.phone,user.user_name ,user.pricture,user.login_flag,user.posotion,user.state,IFNULL(count(user_message.stauts),0) as unread-->
    <!--from user  inner join user_message on user.phone = user_message.Hairuser_phone-->
    <!--and user.phone = #{phone,jdbcType=VARCHAR}  and user_message.stauts = 0-->
  <!--</select>-->

   <!--<select id="userLists" parameterType="java.lang.String" resultMap="ResultList">-->
   <!--select phone,user_name ,pricture,login_flag,posotion,state-->
    <!--from user where phone = #{phone,jdbcType=VARCHAR}-->
  <!--</select>-->

  <select id="userRank" resultMap="ResultRank">
   select user.pricture,user.phone,user.user_name,role.Image,user.posotion,user.account,count(model.user_id) as modelNum
   from user  inner join model on user.phone=model.user_id
   inner join role  on user.role_id = role.id
   group by model.user_id order by account desc
  </select>

  <select id="userRanks" resultMap="ResultRank">
   select user.pricture,user.phone,user.user_name,role.Image,user.posotion,user.account
   from user inner join role on user.role_id = role.id
   order by account desc
  </select>

</mapper>