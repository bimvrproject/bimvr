<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhbim.bimvr.dao.mapper.GroupMessageMapper" >
  <resultMap id="BaseResultMap" type="com.jhbim.bimvr.dao.entity.pojo.GroupMessage" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="Group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="User_Id" property="userId" jdbcType="INTEGER" />
    <result column="Role_id" property="roleId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="calltime" property="calltime" jdbcType="TIMESTAMP" />
    <result column="stauts" property="stauts" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, Group_id, User_Id, Role_id, content, calltime, stauts, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from group_message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from group_message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupMessage" >
    insert into group_message (id, Group_id, User_Id, 
      Role_id, content, calltime, 
      stauts, type)
    values (#{id,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{calltime,jdbcType=TIMESTAMP}, 
      #{stauts,jdbcType=INTEGER}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupMessage" >
    insert into group_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupId != null" >
        Group_id,
      </if>
      <if test="userId != null" >
        User_Id,
      </if>
      <if test="roleId != null" >
        Role_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="calltime != null" >
        calltime,
      </if>
      <if test="stauts != null" >
        stauts,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null" >
        #{calltime,jdbcType=TIMESTAMP},
      </if>
      <if test="stauts != null" >
        #{stauts,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupMessage" >
    update group_message
    <set >
      <if test="groupId != null" >
        Group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        User_Id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        Role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null" >
        calltime = #{calltime,jdbcType=TIMESTAMP},
      </if>
      <if test="stauts != null" >
        stauts = #{stauts,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupMessage" >
    update group_message
    set Group_id = #{groupId,jdbcType=VARCHAR},
      User_Id = #{userId,jdbcType=INTEGER},
      Role_id = #{roleId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      calltime = #{calltime,jdbcType=TIMESTAMP},
      stauts = #{stauts,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <!--推荐群根据热度显示-->
    <select id="getAllheat" resultMap="BaseResultMap">
        SELECT COUNT(Group_id),Group_id FROM `group_message` GROUP BY Group_id ORDER BY COUNT(Group_id) desc
    </select>
  <!--查询未读消息条数0未读 1 已读-->
  <select id="getusercount" resultMap="BaseResultMap">
      SELECT
      <include refid="Base_Column_List" />
       FROM `group_message` where User_Id not in (SELECT user_id from group_message where  User_Id = #{userId,jdbcType=INTEGER}) and Group_id = #{groupId,jdbcType=VARCHAR} and stauts = #{stauts,jdbcType=INTEGER}
  </select>
    <!--根据群id查询里面的内容-->
    <select id="readthecontent" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM `group_message` where Group_id = #{groupId,jdbcType=VARCHAR} ORDER BY calltime
    </select>
  <!--根据用户id查询状态-->
  <select id="findbyuserid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_message
    where   User_Id = #{userId,jdbcType=INTEGER} and  stauts = #{stauts,jdbcType=INTEGER}
  </select>
</mapper>