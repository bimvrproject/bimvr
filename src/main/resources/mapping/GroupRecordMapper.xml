<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhbim.bimvr.dao.mapper.GroupRecordMapper" >
  <resultMap id="BaseResultMap" type="com.jhbim.bimvr.dao.entity.pojo.GroupRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="groupid" property="groupid" jdbcType="VARCHAR" />
    <result column="Role_id" property="roleId" jdbcType="INTEGER" />
    <result column="userphone" property="userphone" jdbcType="VARCHAR" />
    <result column="invitephone" property="invitephone" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="islike" property="islike" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="grtime" property="grtime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, groupid, Role_id, userphone, invitephone, level, islike, message, grtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from group_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from group_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupRecord" >
    insert into group_record (id, groupid, Role_id, 
      userphone, invitephone, level, 
      islike, message, grtime
      )
    values (#{id,jdbcType=VARCHAR}, #{groupid,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{userphone,jdbcType=VARCHAR}, #{invitephone,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{islike,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{grtime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupRecord" >
    insert into group_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="roleId != null" >
        Role_id,
      </if>
      <if test="userphone != null" >
        userphone,
      </if>
      <if test="invitephone != null" >
        invitephone,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="islike != null" >
        islike,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="grtime != null" >
        grtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userphone != null" >
        #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="invitephone != null" >
        #{invitephone,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="islike != null" >
        #{islike,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="grtime != null" >
        #{grtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupRecord" >
    update group_record
    <set >
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        Role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userphone != null" >
        userphone = #{userphone,jdbcType=VARCHAR},
      </if>
      <if test="invitephone != null" >
        invitephone = #{invitephone,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="islike != null" >
        islike = #{islike,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="grtime != null" >
        grtime = #{grtime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhbim.bimvr.dao.entity.pojo.GroupRecord" >
    update group_record
    set groupid = #{groupid,jdbcType=VARCHAR},
      Role_id = #{roleId,jdbcType=INTEGER},
      userphone = #{userphone,jdbcType=VARCHAR},
      invitephone = #{invitephone,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      islike = #{islike,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      grtime = #{grtime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!--查看本人是否在所对应的群组里-->
  <select id="fingByGroupIdandIslike" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record
    where groupid = #{groupid,jdbcType=VARCHAR} and  userphone = #{userphone,jdbcType=VARCHAR}
  </select>
  <!--我加入的群-->
  <select id="findByusergroup"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record
    where   userphone = #{userphone,jdbcType=VARCHAR} and islike = #{islike,jdbcType=INTEGER}
  </select>
  <!--修改是否同意进群-->
  <update id="updateislike">
    update group_record
    set  islike = #{islike,jdbcType=INTEGER}
    where userphone = #{userphone,jdbcType=VARCHAR} and groupid in
    <foreach collection="groupid" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <!--退出群组-->
  <delete id="deletegroupid" parameterType="java.lang.String" >
    delete from group_record
    where groupid = #{groupid,jdbcType=VARCHAR} and userphone = #{userphone,jdbcType=VARCHAR}
  </delete>
  <!--解散群组-->
  <delete id="deletegroup" parameterType="java.lang.String" >
    delete from group_record
    where groupid = #{groupid,jdbcType=VARCHAR}
  </delete>
  <!--转让群组-->
  <update id="updategrouplevel">
    update group_record
      set  level = #{level,jdbcType=INTEGER}
    where userphone = #{userphone,jdbcType=VARCHAR} and groupid = #{groupid,jdbcType=VARCHAR}
  </update>
  <!--获取该群的所有人员-->
  <select id="getgropuserAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record
    where groupid = #{groupid,jdbcType=VARCHAR} and islike = #{islike,jdbcType=INTEGER} ORDER BY LEVEL
  </select>
  <!--根据群号查询群的信息-->
  <select id="getgroup" resultType="Integer">
    select COUNT(level) from group_record where groupid = #{groupid,jdbcType=VARCHAR} and level = #{level,jdbcType=INTEGER}
  </select>
  <!--根据群号查询-->
  <select id="findbygroupnoid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record
    where groupid = #{groupid,jdbcType=VARCHAR} and islike = #{islike,jdbcType=INTEGER}
  </select>
  <!--同意或忽略状态(进群群主或管理员)-->
  <update id="updategroupislike" >
    update group_record
    set  islike = #{islike,jdbcType=INTEGER}
    where userphone in
    <foreach collection="userphone" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach> and groupid = #{groupid,jdbcType=VARCHAR}
  </update>
  <!--阻止重复增加进群记录-->
  <select id="getnotexistgroupuser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record where groupid = #{groupid,jdbcType=VARCHAR} and userphone = #{userphone,jdbcType=VARCHAR}  and islike=#{islike,jdbcType=INTEGER}
  </select>
  <select id="findbyusersphone" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from group_record
    where userphone = #{userphone,jdbcType=VARCHAR} and (level = 0 or level = 1)
  </select>
</mapper>